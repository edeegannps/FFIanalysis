for(x in 1:nrow(tree)){
if(is.na(tree[x, "DBH"])){
tree[x, "SizeClass"]="NA"
}else{
if(tree[x, "DBH"]<=15.1){
#pole tree
tree[x, "SizeClass"]="Pole (<15.1)"
}else if(15.1<tree[x, "DBH"] & tree[x, "DBH"]<30){
#medium tree
tree[x, "SizeClass"]="Medium (<30)"
}else{
#overstory tree
tree[x, "SizeClass"]="Overstory (30<)"
}
}
}
#counting species for each year and creating new data frame for results
species_summary_2=tree %>% group_by(Year, SizeClass) %>% count(Species.Symbol)
early_ss=species_summary_2[which(species_summary_2$Year %in% c("1990", "1991", "1992")), ]
species=unique(early_ss$Species.Symbol)
sizeclasses=unique(early_ss$SizeClass)
totals=c()
for(s in 1:length(species)){
df1=early_ss[which(early_ss$Species.Symbol==species[s]),]
for(c in 1:length(sizeclasses)){
df2=df1[which(df1$SizeClass==sizeclasses[c]),]
totals=c(totals, sum(df2$n))
}
}
early_ss=cbind(c(rep("1992", length(species)*3)), rep(species,3), totals, rep(sizeclasses, 5))
colnames(early_ss)=c("Year", "Species.Symbol", "n", "SizeClass")
early_ss=as.data.frame(early_ss)
species_summary_2=species_summary_2[-which(species_summary_2$Year %in% c("1990", "1991", "1992")), ]
species_summary_2=rbind(early_ss, species_summary_2)
species_summary_2$Year=as.character(species_summary_2$Year)
#calculating total tree count for each year - to be used in percentage calculation
species_summary_2$n=as.integer(species_summary_2$n)
species_summary_2 <- species_summary_2 %>%
group_by(Year, SizeClass) %>%
mutate(total = sum(n)) %>%
ungroup()
#calculating species percentage of total for each year
species_summary_2 <- species_summary_2 %>%
mutate(percent = round(n/total*100, 1))
#renaming species code to common name - CHANGE FOR LOCAL SPECIES
species_summary_2=species_summary_2 %>%
mutate(Species.Symbol = recode(Species.Symbol,
'ABCO1' = 'White Fir',
'QUGA1' = 'Gambels Oak',
'PIPO1' = 'Ponderosa Pine',
'PIST1' = 'Southwestern White Pine',
'PSME1' = 'Douglas Fir'))
species_summary_2=species_summary_2[-which(species_summary_2$SizeClass=="NA"),]
species_summary_2=species_summary_2 %>%
arrange(match(SizeClass,c("Overstory (30<)", "Medium (<30)", "Pole (<15.1)")), Year)
plot=ggplot(species_summary_2, aes(x="", y=percent, fill=Species.Symbol)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
facet_grid(factor(SizeClass, levels=c("Overstory (30<)", "Medium (<30)", "Pole (<15.1)")) ~ Year)+
geom_text(aes(label = paste(percent, "%")), size=2,position = position_stack(vjust=0.5)) +
labs(x = NULL, y = NULL, fill = NULL)+theme_bw()+scale_fill_brewer(palette = "PuOr")+
labs(title = "PSME plots species composition over time")+
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
plots_num=tree %>% group_by(Year) %>% summarize(count=n_distinct(MacroPlot.Name))
plots_num[3,2]=9
species_summary_2=merge(plots_num, species_summary_2, by="Year")
species_summary_2=species_summary_2 %>%
mutate(Acre = round(count*0.24710538, 1))
species_summary_2[which(species_summary_2$SizeClass=="Pole (<15.1)"), "Acre"]=species_summary_2[which(species_summary_2$SizeClass=="Pole (<15.1)"), "Acre"]*0.25
species_summary_2$count_per_acre=species_summary_2$n/species_summary_2$Acre
species_summary_2=species_summary_2 %>% group_by(Year, SizeClass) %>% summarize(sum=sum(count_per_acre))
print(round(species_summary_2$sum,1))
setwd("C:/Users/edeegan/OneDrive - DOI/Fire_project/Fire_project/")
library(tidyverse)
library(ggrepel)
library(multcompView)
#clearing environment - fresh start!
rm(list = ls())
#reading in cover data
cover=read.csv("SAGU_data/PSME/PSME_Cover - Species Composition (metric)_XPT.csv", na.strings=c("","NA"))
#formatting date column
cover$Date=as.Date(cover$Date, format="%m/%d/%Y")
#creating new column for just year
cover$Year=str_split_i(cover$Date, "-", 1)
#uv1 describes category
canopy=cover[which(cover$UV1=="Canopy Cover Class"),]
#reading in tree data
tree=read.csv("C:/Users/edeegan/OneDrive - DOI/Fire_project/Fire_project/SAGU_data/PSME/PSME_Trees - Individuals (metric)_XPT.csv")
#formatting date column
tree$Date=as.Date(tree$Date, format="%m/%d/%Y")
#creating new column for just year
tree$Year=str_split_i(tree$Date, "-", 1)
#combining 1990, 1991, 1992
tree[which(tree$Year=='1990' | tree$Year=='1991'), "Year"]='1992'
#renaming species code to common name - CHANGE FOR LOCAL SPECIES
tree=tree %>%
mutate(Species.Symbol = case_match(Species.Symbol,
'ABCO1' ~ 'White Fir',
'QUGA1' ~ 'Gambels Oak',
'PIPO1' ~ 'Ponderosa Pine',
'PIST1' ~ 'Southwestern White Pine',
'PSME1' ~ 'Douglas Fir'))
#TREE BASAL AREA CALCULATION
tree_1=tree[-which(tree$Status=="D"),] #only live trees
#tree_1=tree_1[-which(tree_1$DBH<=15.1),] #remove poles
tree_1$DBH=tree_1$DBH*0.39370079 #convert to inches
tree_1$basal_area=(tree_1$DBH^2)*0.005454 #formula
tree_1$basal_area=as.numeric(tree_1$basal_area)
tree_1=tree_1[-which(is.na(tree_1$basal_area)),] #only tree w basal area
#sum basal area by year and plot
tree_basal=tree_1 %>% group_by(Year, MacroPlot.Name, SubFrac, Species.Symbol) %>% summarize(total_ba=sum(basal_area))
#adding acres
tree_basal=tree_basal %>%
mutate(acres = 0.24710538*SubFrac) %>% mutate(density=total_ba/acres)
#sum density by plot and year
tree_basal=tree_basal %>% group_by(Year, MacroPlot.Name, Species.Symbol) %>% summarize(totalba_peracre=sum(density))
#averaging/plot by year
tree_basal_summary=tree_basal %>% group_by(Year, Species.Symbol) %>% summarize(avg_plot_ba=mean(totalba_peracre))
#plotting by species
plot=ggplot(tree_basal, aes(x=Year, y=totalba_peracre, fill=Species.Symbol))+
geom_bar(position="stack", stat="identity")+theme_classic()+ylab("Total Basal Area per Acre (ft^2/acre)")
plot=plot +annotate("text", x="2003", y=50,size=3, label="Fire", color="red")
plot
View(tree_basal_summary)
View(tree_basal)
View(tree_basal)
##OPTIONAL FILTER FOR STAND REPLACING PLOTS
tree_basal %>% filter(MacroPlot.Name=="PSME-03" | MacroPlot.Name=="PSME-07"|
MacroPlot.Name=="PSME-08"|MacroPlot.Name=="PSME-09")
##OPTIONAL FILTER FOR STAND REPLACING PLOTS
tree_basal_2=tree_basal %>% filter(MacroPlot.Name=="PSME-03" | MacroPlot.Name=="PSME-07"|
MacroPlot.Name=="PSME-08"|MacroPlot.Name=="PSME-09")
#averaging/plot by year
tree_basal_summary=tree_basal_2 %>% group_by(Year, Species.Symbol) %>% summarize(avg_plot_ba=mean(totalba_peracre))
#plotting by species
plot=ggplot(tree_basal, aes(x=Year, y=totalba_peracre, fill=Species.Symbol))+
geom_bar(position="stack", stat="identity")+theme_classic()+ylab("Total Basal Area per Acre (ft^2/acre)")
plot=plot +annotate("text", x="2003", y=50,size=3, label="Fire", color="red")
plot
View(tree_basal_summary)
View(tree_basal_2)
#plotting by species
plot=ggplot(tree_basal_2, aes(x=Year, y=totalba_peracre, fill=Species.Symbol))+
geom_bar(position="stack", stat="identity")+theme_classic()+ylab("Total Basal Area per Acre (ft^2/acre)")
plot=plot +annotate("text", x="2003", y=50,size=3, label="Fire", color="red")
plot
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/tree_basal_area_SRF.png", width=7, height=3)
##OPTIONAL FILTER FOR STAND REPLACING PLOTS
tree_basal_2=tree_basal %>% filter(MacroPlot.Name=="PSME-01" | MacroPlot.Name=="PSME-02"|
MacroPlot.Name=="PSME-04"|MacroPlot.Name=="PSME-05"|MacroPlot.Name=="PSME-06"
|MacroPlot.Name=="PSME-10")
#averaging/plot by year
tree_basal_summary=tree_basal_2 %>% group_by(Year, Species.Symbol) %>% summarize(avg_plot_ba=mean(totalba_peracre))
#plotting by species
plot=ggplot(tree_basal_2, aes(x=Year, y=totalba_peracre, fill=Species.Symbol))+
geom_bar(position="stack", stat="identity")+theme_classic()+ylab("Total Basal Area per Acre (ft^2/acre)")
plot=plot +annotate("text", x="2003", y=50,size=3, label="Fire", color="red")
plot
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/tree_basal_area_NSRF.png", width=7, height=3)
##OPTIONAL FILTER FOR STAND REPLACING PLOTS
tree_basal_2=tree_basal %>% filter(MacroPlot.Name=="PSME-03" | MacroPlot.Name=="PSME-07"|
MacroPlot.Name=="PSME-08"|MacroPlot.Name=="PSME-09")
View(tree_basal_2)
#plotting by species
plot=ggplot(tree_basal_2, aes(x=Year, y=totalba_peracre, fill=Species.Symbol))+
geom_bar(position="stack", stat="identity")+theme_classic()+ylab("Total Basal Area per Acre (ft^2/acre)")
plot=plot +annotate("text", x="2003", y=50,size=3, label="Fire", color="red")
plot
?write.csv
write.csv(tree_basal_2, "tree_basal.csv")
#setting working directory - must change to location of data on users computer!
setwd("C:/Users/edeegan/OneDrive - DOI/Fire_project/Fire_project/")
#loading libraries
library(tidyverse)
library(ggrepel)
library(ordinal)
library(pals)
library(egg)
#clearing environment - fresh start!
rm(list = ls())
#reading in cover data - must change to location of data on users computer!
cover=read.csv("SAGU_data/PSME/PSME_Cover - Species Composition (metric)_XPT.csv", na.strings=c("","NA"))
#formatting date column
cover$Date=as.Date(cover$Date, format="%m/%d/%Y")
#creating new column for just year
cover$Year=str_split_i(cover$Date, "-", 1)
#uv1 describes category, filtering for most common herbaceous species
common_species=cover[which(cover$UV1=="Most Common Herbaceous Species"),]
#counting species for each year and creating new data frame for results
species_summary=common_species %>% group_by(Year) %>% count(Species.Symbol)
species_summary=species_summary[-which(species_summary$Species.Symbol=="XXXX"),]
#counting number of times a species was recorded for each year to calculate percentages
species_summary <- species_summary %>%
group_by(Year) %>%
mutate(total = sum(n)) %>%
ungroup()
#calculating species percentage of total for each year
species_summary <- species_summary %>% group_by(Species.Symbol) %>%
mutate(percent = round(n/total*100, 1))
#renaming species code to common name - CHANGE FOR LOCAL SPECIES
species_summary=species_summary %>%
mutate(Species.Symbol = recode(Species.Symbol,
'ARLA1' = 'Sandwort',
'BRCI1' = 'Fringed Brome',
'CAGE1' = 'White Mountain Sedge',
'CHEI1' = 'Lipfern',
'COCO1' = 'Coulters Horseweed',
'KOMA1' = 'Mountain Junegrass',
'OXAL1' = 'Wood Sorrel',
'PTAQ1' = 'Bracken Fern',
'SCPA1' = 'Figwort',
'COCA1' = 'Canadian Horseweed',
'COUM1' = 'Bastard Toadflax',
'GNAP1' = 'Cudweed',
'HODU1' = 'Mountain Spray',
'PIFI1' = 'Pinyon Rice Grass',
'AGHE1' = 'Fragrant Snakeroot',
'CHGR1' = 'Fetid Goosefoot',
'GALI1' = 'Common Bedstraw',
'GRAS1' = 'Unknown Grass',
'POFE1' = 'Fendler Bluegrass',
'SYOR1' = 'Mountain Snowberry',
'RONE1'= 'New Mexican Locust',
'FORB1'= 'Unknown Forb'))
#classifying as grass or forb
species_summary=species_summary %>%
mutate(Veg_type = recode(Species.Symbol,
'Sandwort' = 'Forb',
'Fringed Brome' = 'Grass',
'White Mountain Sedge' = 'Grass',
'Lipfern' = 'Forb',
'Coulters Horseweed' = 'Forb',
'Mountain Junegrass' = 'Grass',
'Wood Sorrel' ='Forb',
'Bracken Fern' = 'Forb',
'Figwort'= 'Forb',
'Canadian Horseweed'= 'Forb',
'Bastard Toadflax'= 'Forb',
'Cudweed'= 'Forb',
'Mountain Spray'= 'Forb',
'Pinyon Rice Grass' = 'Grass',
'Fragrant Snakeroot'= 'Forb',
'Fetid Goosefoot'= 'Forb',
'Common Bedstraw'= 'Forb',
'Unknown Grass' = 'Grass',
'Fendler Bluegrass' = 'Grass',
'Mountain Snowberry'= 'Forb',
'New Mexican Locust'= 'Forb',
'Unknown Forb'= 'Forb'))
ggplot(species_summary, aes(x="", y=percent, fill=Species.Symbol)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)+
facet_wrap(~Year)+
geom_text(aes(label = paste(percent, "%")), size=2,
position = position_stack(vjust=0.5)) +
labs(x = NULL, y = NULL, fill = NULL)+theme_bw()+scale_fill_manual(values=as.vector(alphabet(22)))+
labs(title = "PSME plots most common herbaceous species")+ #change this to reflect monitoring type
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
#saving plot in PSME plot folder - change to desired location on computer
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/most_common_species.png", width=10, height=4)
#uv1 describes category, filtering for Canopy Cover Class data
canopy=cover[which(cover$UV1=="Canopy Cover Class"),]
#calculating average canopy cover for each year and creating new data frame with results
canopy_summary=canopy %>% group_by(Year) %>% summarize(average=mean(Cover))
#plotting average canopy cover in bar graph - doesn't show distribution well
canopy_summary %>% ggplot(aes(Year, average))+geom_col()+ylab("Average Canopy Cover")+theme_classic()
#saving average canopy cover plot in PSME folder - change to desired location on computer
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/canopy_cover_summary.png")
#plotting canopy cover distribution in a jitter and boxplot - shows distribution better
canopy %>% ggplot(aes(Year, Cover, fill=Year))+geom_boxplot()+geom_jitter()+theme_classic()+ylab("Canopy Cover")
#saving canopy cover boxplot in PSME folder - change to desired location on computer
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/canopy_cover_jitter.png")
#ploting canopy cover count per plot and year, with a different color for each plot
canopy %>% ggplot(aes(Cover, fill=MacroPlot.Name))+geom_histogram()+
facet_wrap(~Year)+theme_classic()+
scale_fill_manual(values=as.vector(ocean.haline(10)))
#saving canopy cover by plot graph - change to desired location on computer
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/canopy_cover_byplot.png")
#running an anova to see if there is a significant difference between years for canopy cover
anova(lm(Cover ~ factor(Year), data = canopy))
#cutting out 2004 to compare - no data exists in 2004 for most common herbaceous species in PSME plots
canopy_2=canopy[-which(canopy$Year=='2004'),]
#plotting canopy boxplot plot and saving as canopy_graph
canopy_graph=canopy_2 %>% ggplot(aes(Year, Cover, fill=Year))+geom_boxplot()+geom_jitter()+theme_classic()+ylab("Canopy Cover")
# stacked bar plot of veg type forb vs grass count by year
stackedbarplot=ggplot(species_summary, aes(fill=Veg_type, x=Year)) +
geom_bar(position="stack", stat="count")+theme_classic()
#stacking stacked bar plot over canopy cover boxplot to compare trends
canopy_species_comparison=ggarrange(stackedbarplot, canopy_graph)
#saving comparison of veg type count and canopy cover- change to desired location on computer
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/canopy_species_comparison.png", plot=canopy_species_comparison)
#counting for each year for percentages
grassvforb=species_summary %>% group_by(Year) %>% count(Veg_type)
grassvforb <- grassvforb %>%
group_by(Year) %>%
mutate(total = sum(n)) %>%
ungroup()
#calculating percentage of total for each year
grassvforb <- grassvforb %>% group_by(Veg_type) %>%
mutate(percent = round(n/total*100, 1))
# stacked bar plot of veg type forb vs grass percent by year
stackedbarplot_percent=ggplot(grassvforb, aes(fill=Veg_type, x=Year, y=percent)) +
geom_bar(position="stack", stat="identity")+theme_classic()
stackedbarplot_percent
#saving stacked bar plot with percentages - change to desired location on computer
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/percent_grassvforb.png")
#stacking stacked bar plot with percentages over canopy cover boxplot to compare trends
ggarrange(stackedbarplot_percent, canopy_graph)
#rereading in cover data
cover=read.csv("SAGU_data/PSME/PSME_Cover - Species Composition (metric)_XPT.csv", na.strings=c("","NA"))
#formatting date column
cover$Date=as.Date(cover$Date, format="%m/%d/%Y")
#creating new column for just year
cover$Year=str_split_i(cover$Date, "-", 1)
#uv1 describes category, filtering for additional species
additional_species=cover[which(cover$UV1=="Additional Species"),]
#removing XXXX species
additional_species=additional_species[-which(additional_species$Species.Symbol=="XXXX"),]
#counting observations by year and plot
additional_species=additional_species %>% group_by(Year, MacroPlot.Name) %>% count()
#plotting number of additional species recorded each year and coloring by plot
ggplot(additional_species, aes(x=Year, y=n, fill=MacroPlot.Name))+
geom_histogram(stat="identity")+ylab("Number of Additional Species recorded")
#saving plot of additional species recorded
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/additionalspecies.png", width=6, height=4)
#uv1 describes category
invasive_species=cover[which(cover$UV1=="Invasive Species"),]
#removing XXXX species
invasive_species=invasive_species[-which(invasive_species$Species.Symbol=="XXXX"),]
#counting observations by year and plot
invasive_species=invasive_species %>% group_by(Year, MacroPlot.Name) %>% count()
#plotting number of invasive species recorded each year and coloring by plot
ggplot(invasive_species, aes(x=Year, y=n, fill=MacroPlot.Name))+
geom_histogram(stat="identity")+ylab("Number of invasive Species recorded")
#saving plot of invasive species recorded
ggsave("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/PSME_Plots/invasivespecies.png", width=6, height=4)
#clearing environment - fresh start!
rm(list = ls())
library(tidyverse)
library(hrbrthemes)
library(reshape2)
library(ggpubr)
plot_order=c("PSME-01" ,"PSME-02", "PSME-03", "PSME-04", "PSME-05" ,"PSME-06" , "PSME-07", "PSME-08" ,"PSME-09", "PSME-10")
#set working directory - CHANGE TO LOCAL SPECIFIC PATH
setwd("C:/Users/edeegan/OneDrive - DOI/FFIanalysis/Analysis/")
#load in tree data - CHANGE TO LOCAL SPECIFIC PATH
tree=read.csv("C:/Users/edeegan/OneDrive - DOI/Fire_project/Fire_project/SAGU_data/PSME/PSME_Trees - Individuals (metric)_XPT.csv")
#formatting date column
tree$Date_format=as.Date(tree$Date, format="%m/%d/%Y")
#creating new column for just year
tree$Year=str_split_i(tree$Date_format, "-", 1)
#filtering for 2001, 2003, 2023
tree=tree %>% filter(Year=="2001" | Year=="2003" | Year=="2023")
#filtering for live trees
tree=tree %>% filter(Status=="L")
poles=tree[which(tree$DBH<=15.1),]
medium=tree[which(tree$DBH>15.1 & tree$DBH<30),]
overstory=tree[which(tree$DBH>=30),]
poles_density=poles %>% group_by(Year, MacroPlot.Name) %>% count() %>%
mutate(density=n/(0.24710538*4))
poles_density_2001=poles_density %>% filter(Year=="2001")
poles_density_2003=poles_density %>% filter(Year=="2003")
#adding blank years
a=c("2003", "PSME-03", as.integer(0), as.numeric(0))
b=c("2003", "PSME-07",as.integer(0), as.numeric(0))
c=c("2003", "PSME-08", as.integer(0), as.numeric(0))
d=c("2003", "PSME-09", as.integer(0), as.numeric(0))
df=as.data.frame(rbind(a, b, c, d))
colnames(df)=c("Year", "MacroPlot.Name", "n", "density")
df$n=as.integer(df$n)
df$density=as.numeric(df$density)
poles_density_2003=poles_density_2003=rbind(poles_density_2003,df )
poles_density_2003$MacroPlot.Name <- factor(poles_density_2003$MacroPlot.Name, levels = plot_order)
poles_density_2003 <- poles_density_2003 %>% arrange(MacroPlot.Name)
poles_density_2023=poles_density %>% filter(Year=="2023")
a=c("2023", "PSME-09", as.integer(0), as.numeric(0))
df=as.data.frame(t(a))
colnames(df)=c("Year", "MacroPlot.Name", "n", "density")
df$n=as.integer(df$n)
df$density=as.numeric(df$density)
poles_density_2023=poles_density_2023=rbind(poles_density_2023,df )
poles_density_2023$MacroPlot.Name <- factor(poles_density_2023$MacroPlot.Name, levels = plot_order)
poles_density_2023 <- poles_density_2023 %>% arrange(MacroPlot.Name)
medium_density=medium %>% group_by(Year, MacroPlot.Name) %>% count() %>%
mutate(density=n/(0.24710538*4))
medium_density_2001=medium_density %>% filter(Year=="2001")
medium_density_2003=medium_density %>% filter(Year=="2003")
a=c("2003", "PSME-03", as.integer(0), as.numeric(0))
c=c("2003", "PSME-08", as.integer(0), as.numeric(0))
d=c("2003", "PSME-09", as.integer(0), as.numeric(0))
df=as.data.frame(rbind(a, c, d))
colnames(df)=c("Year", "MacroPlot.Name", "n", "density")
df$n=as.integer(df$n)
df$density=as.numeric(df$density)
medium_density_2003=medium_density_2003=rbind(medium_density_2003,df )
medium_density_2003$MacroPlot.Name <- factor(medium_density_2003$MacroPlot.Name, levels = plot_order)
medium_density_2003 <- medium_density_2003 %>% arrange(MacroPlot.Name)
medium_density_2023=medium_density %>% filter(Year=="2023")
a=c("2023", "PSME-07", as.integer(0), as.numeric(0))
c=c("2023", "PSME-08", as.integer(0), as.numeric(0))
df=as.data.frame(rbind(a, c))
colnames(df)=c("Year", "MacroPlot.Name", "n", "density")
df$n=as.integer(df$n)
df$density=as.numeric(df$density)
medium_density_2023=medium_density_2023=rbind(medium_density_2023,df )
medium_density_2023$MacroPlot.Name <- factor(medium_density_2023$MacroPlot.Name, levels = plot_order)
medium_density_2023 <- medium_density_2023 %>% arrange(MacroPlot.Name)
overstory_density=overstory %>% group_by(Year, MacroPlot.Name) %>% count() %>%
mutate(density=n/(0.24710538*4))
overstory_density_2001=overstory_density %>% filter(Year=="2001")
overstory_density_2003=overstory_density %>% filter(Year=="2003")
a=c("2003", "PSME-03", as.integer(0), as.numeric(0))
c=c("2003", "PSME-08", as.integer(0), as.numeric(0))
d=c("2003", "PSME-09", as.integer(0), as.numeric(0))
df=as.data.frame(rbind(a, c, d))
colnames(df)=c("Year", "MacroPlot.Name", "n", "density")
df$n=as.integer(df$n)
df$density=as.numeric(df$density)
overstory_density_2003=overstory_density_2003=rbind(overstory_density_2003,df )
overstory_density_2003$MacroPlot.Name <- factor(overstory_density_2003$MacroPlot.Name, levels = plot_order)
overstory_density_2003 <- overstory_density_2003 %>% arrange(MacroPlot.Name)
overstory_density_2023=overstory_density %>% filter(Year=="2023")
a=c("2023", "PSME-03", as.integer(0), as.numeric(0))
c=c("2023", "PSME-08", as.integer(0), as.numeric(0))
d=c("2023", "PSME-09", as.integer(0), as.numeric(0))
df=as.data.frame(rbind(a, c, d))
colnames(df)=c("Year", "MacroPlot.Name", "n", "density")
df$n=as.integer(df$n)
df$density=as.numeric(df$density)
overstory_density_2023=overstory_density_2023=rbind(overstory_density_2023,df )
overstory_density_2023$MacroPlot.Name <- factor(overstory_density_2023$MacroPlot.Name, levels = plot_order)
overstory_density_2023 <- overstory_density_2023 %>% arrange(MacroPlot.Name)
#jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
#par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3)
barplot(medium_density_2001$density, names.arg = medium_density_2001$MacroPlot.Name, col = "#e5f5e0", cex.axis = 3)
barplot(overstory_density_2001$density, names.arg = overstory_density_2001$MacroPlot.Name, col = "#fee0d2", cex.axis = 3)
barplot(poles_density_2003$density, names.arg = poles_density_2003$MacroPlot.Name, col = "#9ecae1", cex.axis = 3)
barplot(medium_density_2003$density, names.arg = medium_density_2003$MacroPlot.Name, col = "#a1d99b", cex.axis = 3)
barplot(overstory_density_2003$density, names.arg = overstory_density_2003$MacroPlot.Name, col = "#fc9272", cex.axis = 3)
barplot(poles_density_2023$density, names.arg = poles_density_2023$MacroPlot.Name, col = "#3182bd", cex.axis = 3)
barplot(medium_density_2023$density, names.arg = medium_density_2023$MacroPlot.Name, col = "#31a354", cex.axis = 3)
barplot(overstory_density_2023$density, names.arg = overstory_density_2023$MacroPlot.Name, col = "#de2d26", cex.axis = 3)
#jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
#par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3, ylim = c(0,100))
#jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
#par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3)
#jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
#par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3, ylim = c(0,35))
#jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
#par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3, ylim = c(0,30))
View(poles_density_2001)
barplot(medium_density_2001$density, names.arg = medium_density_2001$MacroPlot.Name, col = "#e5f5e0", cex.axis = 3)
barplot(overstory_density_2001$density, names.arg = overstory_density_2001$MacroPlot.Name, col = "#fee0d2", cex.axis = 3)
barplot(poles_density_2003$density, names.arg = poles_density_2003$MacroPlot.Name, col = "#9ecae1", cex.axis = 3)
barplot(medium_density_2003$density, names.arg = medium_density_2003$MacroPlot.Name, col = "#a1d99b", cex.axis = 3)
barplot(overstory_density_2003$density, names.arg = overstory_density_2003$MacroPlot.Name, col = "#fc9272", cex.axis = 3)
barplot(poles_density_2023$density, names.arg = poles_density_2023$MacroPlot.Name, col = "#3182bd", cex.axis = 3)
barplot(overstory_density_2003$density, names.arg = overstory_density_2003$MacroPlot.Name, col = "#fc9272", cex.axis = 3)
barplot(poles_density_2023$density, names.arg = poles_density_2023$MacroPlot.Name, col = "#3182bd", cex.axis = 3)
barplot(medium_density_2023$density, names.arg = medium_density_2023$MacroPlot.Name, col = "#31a354", cex.axis = 3)
barplot(overstory_density_2023$density, names.arg = overstory_density_2023$MacroPlot.Name, col = "#de2d26", cex.axis = 3)
barplot(medium_density_2003$density, names.arg = medium_density_2003$MacroPlot.Name, col = "#a1d99b", cex.axis = 3)
View(medium_density_2003)
#jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
#par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2001$density, names.arg = medium_density_2001$MacroPlot.Name, col = "#e5f5e0", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2001$density, names.arg = overstory_density_2001$MacroPlot.Name, col = "#fee0d2", cex.axis = 3, ylim = c(0,36))
barplot(poles_density_2003$density, names.arg = poles_density_2003$MacroPlot.Name, col = "#9ecae1", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2003$density, names.arg = medium_density_2003$MacroPlot.Name, col = "#a1d99b", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2003$density, names.arg = overstory_density_2003$MacroPlot.Name, col = "#fc9272", cex.axis = 3, ylim = c(0,36))
barplot(poles_density_2023$density, names.arg = poles_density_2023$MacroPlot.Name, col = "#3182bd", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2023$density, names.arg = medium_density_2023$MacroPlot.Name, col = "#31a354", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2023$density, names.arg = overstory_density_2023$MacroPlot.Name, col = "#de2d26", cex.axis = 3, ylim = c(0,36))
jpeg("PSME_Plots/somethingelse.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2001$density, names.arg = medium_density_2001$MacroPlot.Name, col = "#e5f5e0", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2001$density, names.arg = overstory_density_2001$MacroPlot.Name, col = "#fee0d2", cex.axis = 3, ylim = c(0,36))
barplot(poles_density_2003$density, names.arg = poles_density_2003$MacroPlot.Name, col = "#9ecae1", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2003$density, names.arg = medium_density_2003$MacroPlot.Name, col = "#a1d99b", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2003$density, names.arg = overstory_density_2003$MacroPlot.Name, col = "#fc9272", cex.axis = 3, ylim = c(0,36))
barplot(poles_density_2023$density, names.arg = poles_density_2023$MacroPlot.Name, col = "#3182bd", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2023$density, names.arg = medium_density_2023$MacroPlot.Name, col = "#31a354", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2023$density, names.arg = overstory_density_2023$MacroPlot.Name, col = "#de2d26", cex.axis = 3, ylim = c(0,36))
dev.off()
jpeg("PSME_Plots/sizeclassdensity.jpg", height=2000, width=3000, units="px")
# Create a bar plot of mean CrScPct values by MacroPlot.Name
par(mfrow=c(3,3))
barplot(poles_density_2001$density, names.arg = poles_density_2001$MacroPlot.Name, col = "#deebf7", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2001$density, names.arg = medium_density_2001$MacroPlot.Name, col = "#e5f5e0", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2001$density, names.arg = overstory_density_2001$MacroPlot.Name, col = "#fee0d2", cex.axis = 3, ylim = c(0,36))
barplot(poles_density_2003$density, names.arg = poles_density_2003$MacroPlot.Name, col = "#9ecae1", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2003$density, names.arg = medium_density_2003$MacroPlot.Name, col = "#a1d99b", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2003$density, names.arg = overstory_density_2003$MacroPlot.Name, col = "#fc9272", cex.axis = 3, ylim = c(0,36))
barplot(poles_density_2023$density, names.arg = poles_density_2023$MacroPlot.Name, col = "#3182bd", cex.axis = 3, ylim = c(0,36))
barplot(medium_density_2023$density, names.arg = medium_density_2023$MacroPlot.Name, col = "#31a354", cex.axis = 3, ylim = c(0,36))
barplot(overstory_density_2023$density, names.arg = overstory_density_2023$MacroPlot.Name, col = "#de2d26", cex.axis = 3, ylim = c(0,36))
dev.off()
